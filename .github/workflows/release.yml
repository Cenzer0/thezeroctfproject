name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  packages: write

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Cache Prisma engines
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: meta
        run: |
          TAG=${GITHUB_REF_NAME}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/api:latest
            ghcr.io/${{ github.repository }}/api:${{ steps.meta.outputs.tag }}

      - name: Build & push Web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/web:latest
            ghcr.io/${{ github.repository }}/web:${{ steps.meta.outputs.tag }}

      - name: Build & push Worker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/worker:latest
            ghcr.io/${{ github.repository }}/worker:${{ steps.meta.outputs.tag }}

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner != 'dependabot[bot]' }}
    steps:
      - name: SSH into host and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            cd ${{ secrets.DEPLOY_PATH }}
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
            # Run prisma migrate deploy inside the migrate service
            docker compose -f docker-compose.prod.yml run --rm migrate sh -lc 'pnpm -C packages/db migrate:deploy'
