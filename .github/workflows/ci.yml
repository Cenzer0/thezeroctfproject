name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Cache Prisma engines
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Prisma generate
        run: pnpm -w run prisma:gen

      - name: Lint
        run: pnpm -w run lint

      - name: Typecheck
        run: pnpm -w run typecheck

      - name: Unit tests
        run: pnpm test

      - name: API e2e tests
        run: pnpm -C apps/api test:e2e

      - name: Build
        run: pnpm -w run build

  docker:
    needs: lint_test_build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/api:latest
      - name: Build and push Web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/web:latest

  migrate_prod:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Deploy migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm -C packages/db migrate:deploy
